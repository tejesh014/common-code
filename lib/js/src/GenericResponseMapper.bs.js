// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Json_decode = require("@glennsl/bs-json/lib/js/src/Json_decode.bs.js");

function execute(json) {
  return /* DefaultError */[{
            type_: /* UnprocessedEntity */2,
            title: Json_decode.field("type", Json_decode.string, json),
            message: Json_decode.field("message", Json_decode.string, json)
          }];
}

var UnprocessedErrorHandler = {
  execute: execute
};

function execute$1(json) {
  return /* DefaultError */[{
            type_: /* NotAcceptableEntity */3,
            title: "Not Acceptable",
            message: Json_decode.field("error", Json_decode.string, json)
          }];
}

var NotAcceptableErrorHandler = {
  execute: execute$1
};

function execute$2(json) {
  return /* DefaultError */[{
            type_: /* Forbidden */5,
            title: Json_decode.field("title", Json_decode.string, json),
            message: Json_decode.field("message", Json_decode.string, json)
          }];
}

var ForbiddenErrorHandler = {
  execute: execute$2
};

function execute$3(json) {
  return /* DefaultError */[{
            type_: /* DataConflict */7,
            title: Json_decode.field("title", Json_decode.string, json),
            message: Json_decode.field("message", Json_decode.string, json)
          }];
}

var DataConflicErrorHandler = {
  execute: execute$3
};

function execute$4(param) {
  return /* DefaultError */[{
            type_: /* TimedoutError */8,
            title: "Timeout error",
            message: "Request timed out"
          }];
}

var TimedoutErrorHandler = {
  execute: execute$4
};

exports.UnprocessedErrorHandler = UnprocessedErrorHandler;
exports.NotAcceptableErrorHandler = NotAcceptableErrorHandler;
exports.ForbiddenErrorHandler = ForbiddenErrorHandler;
exports.DataConflicErrorHandler = DataConflicErrorHandler;
exports.TimedoutErrorHandler = TimedoutErrorHandler;
/* No side effect */
